{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww28600\viewh18000\viewkind0
\deftab560
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0

\f0\fs26 \cf0 import openai\
import random\
\
# Initialize OpenAI API with your key\
openai.api_key = g388Hc3FooK_oymFc43RZxo7xMWqCWoGTQrM2AEy9W3PCBkv_HRN4u8wnhBKTT3BlbkFJYVLdbbTI_5O7avo6LdUXx4eTKX9qobyRVxadtQxx1E5LPbG2Qf9PmAA3J_D5_ialB3Q2K4pV4A  # Replace g388Hc3FooK_oymFc43RZxo7xMWqCWoGTQrM2AEy9W3PCBkv_HRN4u8wnhBKTT3BlbkFJYVLdbbTI_5O7avo6LdUXx4eTKX9qobyRVxadtQxx1E5LPbG2Qf9PmAA3J_D5_ialB3Q2K4pV4A with your actual OpenAI API key\
\
# Define templates for different types of posts\
templates = \{\
    "showcase": "\uc0\u1510 \u1497 \u1493 \u1512  \u1489 \u1505 \u1490 \u1504 \u1493 \u1503  \u1497 \u1497 \u1495 \u1493 \u1491 \u1497  \u1492 \u1502 \u1514 \u1488 \u1497 \u1501  \u1489 \u1502 \u1497 \u1493 \u1495 \u1491  \u1500 \u1495 \u1491 \u1512  \{room_type\}. \u1492 \u1510 \u1489 \u1506 \u1497 \u1501  \{color_palette\} \u1502 \u1493 \u1505 \u1497 \u1508 \u1497 \u1501  \u1488 \u1493 \u1493 \u1497 \u1512 \u1492  \{ambiance\}.",\
    "sale": "\uc0\u1495 \u1490 \u1497 \u1490 \u1514  \u1502 \u1499 \u1497 \u1512 \u1493 \u1514  \u1489 \u1488 \u1493 \u1502 \u1504 \u1493 \u1514  \u1488 \u1511 \u1512 \u1497 \u1500 \u1497 \u1511 ! \u1506 \u1499 \u1513 \u1497 \u1493  \u1489 \u1502 \u1495 \u1497 \u1512 \u1497 \u1501  \u1504 \u1490 \u1497 \u1513 \u1497 \u1501  \u1489 \u1497 \u1503  30 \u1500 -3000 \u1513 \\"\u1495 .",\
    "new_arrival": "\uc0\u1495 \u1491 \u1513  \u1489 \u1488 \u1514 \u1512 ! \u1497 \u1510 \u1497 \u1512 \u1492  \{style\} \u1513 \u1502 \u1513 \u1491 \u1512 \u1490 \u1514  \u1499 \u1500  \u1495 \u1500 \u1500  \u1493 \u1502 \u1493 \u1505 \u1497 \u1508 \u1492  \u1502 \u1490 \u1506  \u1488 \u1497 \u1513 \u1497 .",\
    "inquiry_response": "\uc0\u1514 \u1493 \u1491 \u1492  \u1506 \u1500  \u1492 \u1492 \u1514 \u1506 \u1504 \u1497 \u1497 \u1504 \u1493 \u1514 ! \u1504 \u1513 \u1502 \u1495  \u1500 \u1492 \u1502 \u1500 \u1497 \u1509  \u1506 \u1500  \u1497 \u1510 \u1497 \u1512 \u1492  \{art_piece\} \u1513 \u1497 \u1499 \u1493 \u1500 \u1492  \u1500 \u1492 \u1514 \u1488 \u1497 \u1501  \u1506 \u1489 \u1493 \u1512 \u1498 ."\
\}\
\
# Function to generate a post based on a selected template\
def generate_post(template_type, **kwargs):\
    prompt = templates[template_type].format(**kwargs)\
    response = openai.Completion.create(\
        engine="text-davinci-004",\
        prompt=prompt,\
        max_tokens=100,\
        temperature=0.7\
    )\
    return response.choices[0].text.strip()\
\
# Example post generation\
post_showcase = generate_post(\
    "showcase",\
    room_type="\uc0\u1495 \u1491 \u1512  \u1506 \u1489 \u1493 \u1491 \u1492 ",\
    color_palette="\uc0\u1490 \u1493 \u1493 \u1504 \u1497  \u1499 \u1495 \u1493 \u1500  \u1493 \u1497 \u1512 \u1493 \u1511 ",\
    ambiance="\uc0\u1513 \u1500 \u1493 \u1493 \u1492  \u1493 \u1504 \u1506 \u1497 \u1502 \u1493 \u1514 "\
)\
\
# Adding hashtags\
hashtags = "#\uc0\u1488 \u1502 \u1504 \u1493 \u1514 \u1489 \u1497 \u1514 \u1497 \u1514  #\u1488 \u1493 \u1502 \u1504 \u1493 \u1514 \u1502 \u1511 \u1493 \u1512 \u1497 \u1514  #\u1506 \u1497 \u1510 \u1493 \u1489 \u1508 \u1504 \u1497 \u1501  #\u1510 \u1497 \u1493 \u1512 \u1489 \u1497 \u1491 "\
full_post_showcase = post_showcase + "\\n\\n" + hashtags\
\
# Print generated post with hashtags\
print("Generated Post:", full_post_showcase)\
\
# Example comment template for user inquiries\
comment_template = "\uc0\u1513 \u1500 \u1493 \u1501 ! \u1514 \u1493 \u1491 \u1492  \u1506 \u1500  \u1492 \u1513 \u1488 \u1500 \u1492  \u1513 \u1500 \u1498 . \{response\}"\
response_options = [\
    "\uc0\u1504 \u1513 \u1502 \u1495  \u1500 \u1492 \u1510 \u1497 \u1506  \u1497 \u1510 \u1497 \u1512 \u1492  \u1489 \u1490 \u1493 \u1493 \u1504 \u1497 \u1501  \u1506 \u1491 \u1497 \u1504 \u1497 \u1501  \u1513 \u1497 \u1499 \u1493 \u1500 \u1492  \u1500 \u1492 \u1499 \u1504 \u1497 \u1505  \u1512 \u1493 \u1490 \u1506  \u1500 \u1495 \u1491 \u1512  \u1492 \u1513 \u1497 \u1504 \u1492 .",\
    "\uc0\u1492 \u1510 \u1497 \u1493 \u1512 \u1497 \u1501  \u1513 \u1500 \u1504 \u1493  \u1494 \u1502 \u1497 \u1504 \u1497 \u1501  \u1489 \u1502 \u1495 \u1497 \u1512 \u1497 \u1501  \u1504 \u1490 \u1497 \u1513 \u1497 \u1501  ",\
    "\uc0\u1504 \u1513 \u1502 \u1495  \u1500 \u1506 \u1494 \u1493 \u1512  \u1500 \u1489 \u1495 \u1493 \u1512  \u1497 \u1510 \u1497 \u1512 \u1492  \u1489 \u1490 \u1493 \u1493 \u1504 \u1497 \u1501  \u1513 \u1502 \u1514 \u1488 \u1497 \u1502 \u1497 \u1501  \u1500 \u1506 \u1497 \u1510 \u1493 \u1489  \u1513 \u1500 \u1498 ."\
]\
\
# Function to generate a comment response\
def generate_comment():\
    selected_response = random.choice(response_options)\
    return comment_template.format(response=selected_response)\
\
# Example usage\
comment_example = generate_comment()\
print("Generated Comment:", comment_example)\
}